{"version":3,"sources":["Pages/Home.js","Pages/AllContent.js","Pages/AddContent.js","Pages/AddUser.js","Pages/AllUsers.js","App.js","index.js"],"names":["LinkButton","location","handleClick","label","children","to","onClick","variant","Home","props","className","AllContent","state","list","id","a","url","fetch","method","header","newResponse","json","newData","this","setState","response","data","undefined","map","item","title","content","deleteContent","content_id","Component","AddContent","mySubmitHandler","event","preventDefault","alert","postNewContent","myChangeHandler","name","target","value","counter","ids","i","length","push","sortedIds","sort","b","direction","contentIds","fetchContent","console","log","updateContentState","headers","body","JSON","stringify","firstContent","moveContent","onSubmit","type","onChange","data-testid","AddUser","email","addNewUser","password","role","user_id","userIds","fetchUsers","allUsers","updateUserState","firstUser","switchUser","deleteUser","AllUsers","user","App","exact","path","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.871e403d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LinkButton = ({location, handleClick, label, children}) => (\r\n  <Link to={location}>\r\n    <button onClick={handleClick} label={label} variant=\"raised\">\r\n      {children}\r\n    </button>\r\n  </Link>\r\n)\r\n\r\nconst Home = ({props}) =>\r\n   (\r\n    <div className=\"App\">\r\n      <h1>Content Manager</h1>\r\n      {/* Link to List.js */}\r\n      <LinkButton location='./content/all' label='all-content' handleClick={props} children='All Content'>\r\n        All Content\r\n      </LinkButton>\r\n\r\n      <LinkButton location='./content/' label='add-content' handleClick={props} children='Add Content'>\r\n        Add Content\r\n      </LinkButton>\r\n\r\n      <LinkButton location='./users/all' label='all-users' handleClick={props} children='All Users'>\r\n        All Users\r\n      </LinkButton>\r\n\r\n      <LinkButton location='./users/' label='add-content' handleClick={props} children='Add User'>\r\n        Add User\r\n      </LinkButton>\r\n    </div>\r\n    );\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\n\r\nclass AllContent extends Component {\r\n  // Initialize the state\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      list: []\r\n    }\r\n  }\r\n\r\n  async deleteContent(id) {\r\n    const url = '/content/'\r\n    const response = await fetch(url+id,{\r\n      method:'DELETE',\r\n      header:{'Accept':'application/json', 'Content-Type':'application/json'}\r\n    })\r\n    const newResponse = await fetch(url)\r\n    const newData = await newResponse.json()\r\n    this.setState({list: newData})\r\n  }\r\n  // Fetch the list on first mount\r\n  async componentDidMount() {\r\n    const url = '/content/'\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    this.setState({list: data})\r\n  }\r\n\r\n  render() {\r\n    const {list} = this.state;\r\n    return (\r\n      <div>\r\n        Content View\r\n        <br/>\r\n        {this.state.list === undefined ? \"No Content\" : \"\"}\r\n        <ul>\r\n          {list.map(item => (\r\n            <li key={item.content_id}>\r\n              Title: {item.title} | Content: {item.content}\r\n              <button className=\"button\" onClick={()=> this.deleteContent(item.content_id)}>\r\n              Delete Content </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllContent;\r\n","import React, { Component } from 'react';\r\n\r\nclass AddContent extends Component {\r\n  // Initialize the state\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      counter: 1,\r\n      title: null,\r\n      content: null,\r\n      id: null\r\n    }\r\n  }\r\n\r\n  async contentIds() {\r\n    const newResponse = await fetch('/content/')\r\n    const data = await newResponse.json()\r\n    let ids = []\r\n      for(let i = 0; i < data.length; i++){\r\n        ids.push(data[i].content_id)\r\n      }\r\n    const sortedIds = ids.sort((a,b)=> a-b)\r\n    this.setState({id: sortedIds})\r\n    return sortedIds\r\n  }\r\n\r\n  // content counter\r\n  async counter(direction) {\r\n    const ids = await this.contentIds()\r\n    const fetchContent = await fetch('/content/')\r\n    const allContent = await fetchContent.json()\r\n    // const contentLength = allContent.length\r\n    if(direction === \"next\" && this.state.counter <= (this.state.id.length-2)) await this.setState({counter: this.state.counter+1})\r\n    if(direction === \"previous\" && this.state.counter > 0) await this.setState({counter: this.state.counter-1})\r\n  }\r\n\r\n  // switch to next or previous piece of content\r\n  async moveContent(direction) {\r\n    const contentIds = await this.contentIds()\r\n    const url = '/content/'\r\n    const counter = await this.counter(direction)\r\n    const newResponse = await fetch(url+[contentIds[this.state.counter]])\r\n    const newData = await newResponse.json()\r\n    this.setState({list: newData})\r\n  }\r\n\r\n  // delete one piece of content\r\n  async deleteContent(id) {\r\n    console.log(\"DC called\")\r\n    const url = '/content/'\r\n    const deleteResponse = await fetch(url+id,{\r\n      method:'DELETE',\r\n      header:{'Accept':'application/json', 'Content-Type':'application/json'}\r\n    })\r\n    this.updateContentState()\r\n  }\r\n\r\n  async postNewContent() {\r\n    const url = '/content/add'\r\n    const deleteResponse = await fetch(url,{\r\n      method:'POST',\r\n      headers: {'Content-Type':'application/json'},\r\n      body: JSON.stringify({title: this.state.title, content: this.state.content})\r\n    })\r\n    this.updateContentState()\r\n  }\r\n\r\n  async updateContentState() {\r\n    const contentIds = await this.contentIds()\r\n    const newResponse = await fetch('/content/'+[contentIds[this.state.counter]])\r\n    const newData = await newResponse.json()\r\n    this.setState({list: newData})\r\n  }\r\n\r\n  mySubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    alert(\"You are submitting \" + this.state.title);\r\n    this.postNewContent()\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  // Fetch the list on first mount\r\n  async componentDidMount() {\r\n    const url = '/content/'\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    const firstContent = data[0]\r\n    this.setState({list: firstContent})\r\n  }\r\n\r\n  render(props) {\r\n    return (\r\n      <div> Content View\r\n        <div>\r\n          Title: {this.state.list === undefined ? \"-\" : this.state.list.title}\r\n          <br/>\r\n          Content: {this.state.list === undefined ? \"-\" : this.state.list.content}\r\n          <br/>\r\n          <button className=\"button\" onClick={()=> this.moveContent(\"previous\")}>\r\n          Previous Content </button>\r\n          <button className=\"button\" onClick={()=> this.moveContent(\"next\")}>\r\n          Next Content </button>\r\n          <button className=\"button\" onClick={()=> this.deleteContent(this.state.id[this.state.counter])}>\r\n          Delete Content </button>\r\n            <div>\r\n            Add content\r\n              <form onSubmit={this.mySubmitHandler}>\r\n              <p>Enter Content Title:</p>\r\n              <input\r\n                type='text'\r\n                name='title'\r\n                onChange={this.myChangeHandler}\r\n              />\r\n              <p>Enter Content Body:</p>\r\n              <input\r\n                type='text'\r\n                name='content'\r\n                onChange={this.myChangeHandler}\r\n              />\r\n              <input\r\n                type='submit'\r\n                data-testid=\"Submit\"\r\n              />\r\n              </form>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContent;\r\n","import React, { Component } from 'react';\r\n\r\nclass AddUser extends Component {\r\n  // Initialize the state\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      counter: 1,\r\n      email: null,\r\n      password: null,\r\n      role: null,\r\n      id: null\r\n    }\r\n  }\r\n\r\n  async userIds() {\r\n    const newResponse = await fetch('/users/')\r\n    const data = await newResponse.json()\r\n    let ids = []\r\n      for(let i = 0; i < data.length; i++){\r\n        ids.push(data[i].user_id)\r\n      }\r\n    const sortedIds = ids.sort((a,b)=> a-b)\r\n    this.setState({id: sortedIds})\r\n    return sortedIds\r\n  }\r\n\r\n  // User counter\r\n  async counter(direction) {\r\n    const ids = await this.userIds()\r\n    const fetchUsers = await fetch('/users/')\r\n    const allUsers = await fetchUsers.json()\r\n    const usersLength = allUsers.length\r\n    if(direction === \"next\" && this.state.counter <= (this.state.id.length-2)) await this.setState({counter: this.state.counter+1})\r\n    if(direction === \"previous\" && this.state.counter > 0) await this.setState({counter: this.state.counter-1})\r\n  }\r\n\r\n  // switch to next or previous user\r\n  async switchUser(direction) {\r\n    const userIds = await this.userIds()\r\n    const url = '/users/'\r\n    const counter = await this.counter(direction)\r\n    const newResponse = await fetch(url+[userIds[this.state.counter]])\r\n    const newData = await newResponse.json()\r\n    this.setState({list: newData})\r\n  }\r\n\r\n  // delete one User\r\n  async deleteUser(id) {\r\n    const url = '/users/'\r\n    const deleteResponse = await fetch(url+id,{\r\n      method:'DELETE',\r\n      header:{'Accept':'application/json', 'Content-Type':'application/json'}\r\n    })\r\n    this.updateUserState()\r\n  }\r\n\r\n  async addNewUser() {\r\n    const url = '/users/add'\r\n    const deleteResponse = await fetch(url,{\r\n      method:'POST',\r\n      headers: {'Content-Type':'application/json'},\r\n      body: JSON.stringify({email: this.state.email, password: this.state.password, role: this.state.role})\r\n    })\r\n    this.updateUserState()\r\n  }\r\n\r\n  async updateUserState() {\r\n    const userIds = await this.userIds()\r\n    const newResponse = await fetch('/users/'+[userIds[this.state.counter]])\r\n    const newData = await newResponse.json()\r\n    this.setState({list: newData})\r\n  }\r\n\r\n  mySubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    alert(\"You have added new user:\" + this.state.email);\r\n    this.addNewUser()\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  // Fetch the list on first mount\r\n  async componentDidMount() {\r\n    const url = '/users/'\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    const firstUser = data[0]\r\n    this.setState({list: firstUser})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div> User View\r\n        <div>\r\n          User Email: {this.state.list === undefined ? \"-\" : this.state.list.email}\r\n          <br/>\r\n          User Role: {this.state.list === undefined ? \"-\" : this.state.list.email}\r\n          <br/>\r\n          <button className=\"button\" onClick={()=> this.switchUser(\"previous\")}>\r\n          Previous User </button>\r\n          <button className=\"button\" onClick={()=> this.switchUser(\"next\")}>\r\n          Next User </button>\r\n          <button className=\"button\" onClick={()=> this.deleteUser(this.state.id[this.state.counter])}>\r\n          Delete User </button>\r\n            <div>\r\n            Add User\r\n              <form onSubmit={this.mySubmitHandler}>\r\n              <p>Enter User Email:</p>\r\n              <input\r\n                type='text'\r\n                name='email'\r\n                onChange={this.myChangeHandler}\r\n              />\r\n              <p>Enter User Password:</p>\r\n              <input\r\n                type='text'\r\n                name='password'\r\n                onChange={this.myChangeHandler}\r\n              />\r\n              <p>Enter User Role:</p>\r\n              <input\r\n                type='text'\r\n                name='role'\r\n                onChange={this.myChangeHandler}\r\n              />\r\n              <input\r\n                type='submit'\r\n                data-testid='Submit'\r\n              />\r\n              </form>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUser;\r\n","import React, { Component } from 'react';\r\n\r\nclass AllUsers extends Component {\r\n  // Initialize the state\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      list: []\r\n    }\r\n  }\r\n\r\n  async deleteUser(id) {\r\n    const url = '/users/'\r\n    const response = await fetch(url+id,{\r\n      method:'DELETE',\r\n      header:{'Accept':'application/json', 'Content-Type':'application/json'}\r\n    })\r\n    const newResponse = await fetch(url)\r\n    const newData = await newResponse.json()\r\n    this.setState({list: newData})\r\n  }\r\n  // Fetch the list on first mount\r\n  async componentDidMount() {\r\n    const url = '/users/'\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    this.setState({list: data})\r\n  }\r\n\r\n  render() {\r\n    const {list} = this.state;\r\n    return (\r\n      <div>\r\n        Content View\r\n        <br/>\r\n        {list.length === 0 ? \"No Content\" : \"\"}\r\n        <ul>\r\n          {list.map(user => (\r\n            <li key={user.user_id}>\r\n              User email: {user.title} | User Role: {user.content}\r\n              <button className=\"button\" onClick={()=> this.deleteUser(user.user_id)}>\r\n              Delete User </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllUsers;\r\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './Pages/Home';\nimport AllContent from './Pages/AllContent';\nimport AddContent from './Pages/AddContent';\nimport AddUser from './Pages/AddUser';\nimport AllUsers from './Pages/AllUsers';\n\nclass App extends Component {\n  render() {\n    const App = () => (\n      <div>\n        <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route path='/content/all' component={AllContent}/>\n          <Route path='/content/' component={AddContent}/>\n          <Route path='/users/' component={AllUsers}/>\n          <Route path='/users/all' component={AddUser}/>\n        </Switch>\n      </div>\n    )\n    return (\n      <Switch>\n        <App/>\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nrender((\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n), document.getElementById('root'));\n"],"sourceRoot":""}